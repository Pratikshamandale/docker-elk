input {
   beats {
     type => beats
     port => 5000
   }
}

filter {
  if [type] =~ "APPLICATION_LOGS" {

     mutate {
       gsub => ['message', "\n", " "]
       gsub => ['message', "\t", " "]
     }

     grok {

        break_on_match => true
         match => {"message" => "%{DAY}, %{INT:Date} %{MONTH} %{YEAR} %{TIME} %{WORD:TimeZone} %{GREEDYDATA:LogMessage}"}
         match => {"message" => '%{WORD:Action} "%{WORD:TaskName}:%{WORD:TaskName}" %{GREEDYDATA:LogMessage}'}
     }

     mutate {
        remove_field => ["message"]
        remove_tag => ["multiline"]
     }
   }

   if [type] =~ "DOCKER_STATS" {

     mutate {
       gsub => ['message', "\n", " "]
       gsub => ['message', "\t", " "]
     }

     grok {

        break_on_match => true
         match => {"message" => "%{WORD:ContainerName}%{SPACE}%{NUMBER:CPU}%%{SPACE}%{NUMBER:Memory}%"}
     }

     mutate {
        convert => { "CPU" => "float" }
        convert => { "Memory" => "float" }
        remove_tag => ["multiline"]
     }
   }
   if [type] =~ "MEMORY_STATS" {

     mutate {
       gsub => ['message', "\n", " "]
       gsub => ['message', "\t", " "]
     }

     grok {

        break_on_match => true
         match => {"message" => "%{WORD}:%{SPACE}%{NUMBER:TOTAL}%{SPACE}%{NUMBER:USED}%{SPACE}%{NUMBER:FREE}%{SPACE}%{NUMBER:SHARED}%{SPACE}%{NUMBER:BUFFERS}%{SPACE}%{NUMBER:CACHED}"}
     }

     mutate {
        convert => { "TOTAL" => "float" }
        convert => { "USED" => "float" }
        convert => { "FREE" => "float" }
        convert => { "SHARED" => "float" }
        convert => { "BUFFERS" => "float" }
        convert => { "CACHED" => "float" }
        remove_tag => ["multiline"] 
     }

   }

  if [type] =~ "CPU_STATS" {

     mutate {
       gsub => ['message', "\n", " "]
       gsub => ['message', "\t", " "]
     }

     grok {

        break_on_match => true
         match => {"message" => "%%{WORD}%{GREEDYDATA}%{NUMBER:User}%{SPACE}us,%{SPACE}%{NUMBER:System}%{SPACE}sy,%{SPACE}%{NUMBER:Nice}%{SPACE}ni,%{SPACE}%{NUMBER:Idle}%{SPACE}id,%{SPACE}%{NUMBER:Wait}%{SPACE}wa,%{SPACE}%{NUMBER:Hardware}%{SPACE}hi,%{SPACE}%{NUMBER:Software}%{SPACE}si,%{SPACE}%{NUMBER:Steal}%{SPACE}st"}
     }

     mutate {
        convert => { "User" => "float" }
        convert => { "System" => "float" }
        convert => { "Nice" => "float" }
        convert => { "Idle" => "float" }
        convert => { "Wait" => "float" }
        convert => { "Hardware" => "float" }
        convert => { "Software" => "float" }
        convert => { "Steal" => "float" }
        remove_tag => ["multiline"]
     }

   }

  if [type] =~ "DISK_STATS" {

     mutate {
       gsub => ['message', "\n", " "]
       gsub => ['message', "\t", " "]
     }

     grok {

        break_on_match => true
         match => {"message" => "/%{WORD}/%{WORD}%{SPACE}%{NUMBER:TOTAL}G%{SPACE}%{NUMBER:USED}G%{SPACE}%{NUMBER:AVAILABLE}G%{SPACE}%{NUMBER:PercentUsage}%%{GREEDYDATA:Volume}"}
     }

     mutate {
        convert => { "TOTAL" => "float" }
        convert => { "USED" => "float" }
        convert => { "AVAILABLE" => "float" }
        remove_tag => ["multiline"]
     }

   }

}   



output {
   stdout {
          codec => rubydebug
   }
   if [type] =~ "APPLICATION_LOGS" {
      elasticsearch {
          manage_template => false
          hosts => ["elasticsearch:9200"]
          index => "application-logs"
      }
   }
   if [type] =~ "DOCKER_STATS" {
      elasticsearch {
          manage_template => false
          hosts => ["elasticsearch:9200"]
          index => "docker-stats-logs"
      }
   }
   if [type] =~ "MEMORY_STATS" {
      elasticsearch {
          manage_template => false
          hosts => ["elasticsearch:9200"]
          index => "memory-stats-logs"
      }
   } 
   if [type] =~ "CPU_STATS" {
      elasticsearch {
          manage_template => false
          hosts => ["elasticsearch:9200"]
          index => "cpu-stats-logs"
      }
   } 
   if [type] =~ "DISK_STATS" {
      elasticsearch {
          manage_template => false
          hosts => ["elasticsearch:9200"]
          index => "disk-stats-logs"
      }
   }           
}
